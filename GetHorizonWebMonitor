$LogFolder = "C:\Temp\Logs\"
$LogFilePrefix = "Monitor_CS711"

$infinite = $true
While ($infinite -eq $true){
$TargetDomain = ".youngtech.com"
$HorizonCSArray = @(
	'CS01'
	'CS02'
	'CS03'
	'CS04'
)

$GetHorizonWebMonitor = {
        param($TargetDomain,$HorizonCS)
	$web = New-Object Net.WebClient
	$request = $null
	$URLtoCheck = "https://" + $HorizonCS + $TargetDomain + "/favicon.ico"
	[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
	try {
		$result = (Measure-Command { $request = Invoke-WebRequest -Uri $URLtoCheck -UseBasicParsing -TimeoutSec 5}).Milliseconds
	} catch {
		$result = $_
	}
	$returnObject = New-Object -TypeName PSObject -Property @{
		HorizonCS	= 	$HorizonCS
		ResponseTime 	=	$result
	}
	$returnObject
}

foreach($HorizonCS in $HorizonCSArray){
	Start-Job -Name $HorizonCS -ScriptBlock $GetHorizonWebMonitor -ArgumentList $TargetDomain,$HorizonCS
}

While (Get-Job -State "Running") {
    write-host -NoNewline "."
    start-sleep 1
}

$returnArray = Get-Job | Receive-Job #

Remove-Job *

cls

$LogFile = ($LogFolder) + ($LogFilePrefix) + "_" + ((get-date -UFormat %Y_%m_%d)) + ".log"
[string]$out = (get-date -DisplayHint DateTime)
[string]$out += ($returnArray | Select-Object HorizonCS,ResponseTime | Foreach {[PSCustomObject]$_} | Format-Table -AutoSize -Wrap | Out-String)

write-host $out
$out | out-file -append $LogFile

start-sleep 15
}

